schema {
  query: Query
}

interface GeoJSONInterface {
  "The geometry type of the GeoJSON object"
  type: GeoJSONGeometryType!
  "The minimum bounding box around the geometry object"
  bbox: [Float]
  "The coordinate reference system integer identifier"
  crs: Int
}

type MultiPolygon implements GeoJSONInterface {
  "The \"coordinates\" field is an array of Polygon coordinate arrays."
  coordinates: [Position]
  "The geometry type of the GeoJSON object"
  type: GeoJSONGeometryType!
  "The minimum bounding box around the geometry object"
  bbox: [Float!]!
  "The coordinate reference system integer identifier"
  crs: Int!
}

type Query {
  test: MultiPolygon
}

enum GeoJSONGeometryType {
  POINT
  MULTI_POINT
  LINE_STRING
  MULTI_LINE_STRING
  POLYGON
  MULTI_POLYGON
  GEOMETRY_COLLECTION
}

"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](http:\/\/en.wikipedia.org\/wiki\/IEEE_floating_point)."
scalar Float

"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."
scalar Int

"A position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or easting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element."
scalar Position
